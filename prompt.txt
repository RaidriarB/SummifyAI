我想要建立一个项目，大致流程如下：
1. 我有一个音频文件或视频文件，经过一些预处理，例如调用了ffmpeg把视频转换为音频，得到处理后的文件（命名为：<原文件名>_1）
2. 预处理过后，需要调用一个方法，把音频转换为文本，会得到一个txt文本。
3. 得到文本后，这个文本是没有标点符号的。对文本进行分块（不要太长了），然后发送给deepseek进行加标点，再返回、拼接。
目前，第一步和第二步你只需给出占位函数即可，第三步需要实现。

参考实现方法：
```
def call_deepseek_api(text, api_key, prompt):
    """
    调用DeepSeek API进行文本处理
    
    Args:
        text (str): 要处理的文本
        api_key (str): DeepSeek API密钥
        prompt (str): 提示词
        
    Returns:
        str: API返回的处理结果
    """
    try:
        # 创建OpenAI客户端，设置base_url为DeepSeek API地址
        client = OpenAI(api_key=api_key, base_url="https://api.deepseek.com")
        
        # 发送请求
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": prompt},
                {"role": "user", "content": text}
            ],
            max_tokens=8000,
            temperature=0.7,
            stream=False
        )
        
        # 返回生成的内容
        return response.choices[0].message.content
    except Exception as e:
        print(f"调用API时出错: {e}")
        return None
```


----------
0. 原始音频文件
1. ffmpeg音频预处理 -> 精细音频
2. buzz转录 -> 原始文本
3. AI加标点、微调 -> 精细文本
4. 使用特定的prompt，比如AI总结



----
帮我编写readme文件
# SummifyAI

SummifyAI 是一个基于 Buzz 转写工具的程序，能够将音频或视频文件转写为文字，并通过 AI 进行修复和总结。该工具特别适用于将网上长篇演讲视频精炼为简洁的文字稿，帮助用户快速获取核心内容。